This file is a merged representation of the entire codebase, combining all repository files into a single document.
Generated by Repomix on: 2025-01-06T22:50:41.691Z

================================================================
File Summary
================================================================

Purpose:
--------
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.

File Format:
------------
The content is organized as follows:
1. This summary section
2. Repository information
3. Repository structure
4. Multiple file entries, each consisting of:
  a. A separator line (================)
  b. The file path (File: path/to/file)
  c. Another separator line
  d. The full contents of the file
  e. A blank line

Usage Guidelines:
-----------------
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.

Notes:
------
- Some files may have been excluded based on .gitignore rules and Repomix's
  configuration.
- Binary files are not included in this packed representation. Please refer to
  the Repository Structure section for a complete list of file paths, including
  binary files.

Additional Info:
----------------

For more information about Repomix, visit: https://github.com/yamadashy/repomix

================================================================
Repository Structure
================================================================
.env.template
.github/workflows/update-fbi-data.yml
.gitignore
main.py
markup.html
README.md
requirements.txt

================================================================
Repository Files
================================================================

================
File: .env.template
================
# TRMNL Configuration
TRMNL_PLUGIN_UUID=your_plugin_uuid_here

# Debug
DEBUG=False

================
File: .github/workflows/update-fbi-data.yml
================
name: Update FBI Wanted Data

on:
  schedule:
    - cron: '0 */6 * * *'
  workflow_dispatch:

jobs:
  update-fbi-data:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests python-dotenv
        
    - name: Run FBI data sync
      env:
        TRMNL_PLUGIN_UUID: ${{ secrets.TRMNL_PLUGIN_UUID }}
      run: python main.py

================
File: .gitignore
================
.env
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
env/
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
*.egg-info/
.installed.cfg
*.egg
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

================
File: main.py
================
import os
import requests
import json
from datetime import datetime
from dotenv import load_dotenv
import time

load_dotenv()

TRMNL_PLUGIN_UUID = os.getenv('TRMNL_PLUGIN_UUID')
TRMNL_WEBHOOK_URL = f"https://usetrmnl.com/api/custom_plugins/{TRMNL_PLUGIN_UUID}"

def get_fbi_data(page=1):
    headers = {
        "Accept": "application/json",
        "User-Agent": "TRMNL-FBI-Plugin/1.0"
    }
    
    try:
        response = requests.get(
            f"https://api.fbi.gov/wanted/v1/list",
            params={'page': page},
            headers=headers
        )
        response.raise_for_status()
        return response.json()
    except Exception as e:
        print(f"Error fetching FBI data: {e}")
        return None

def format_fbi_data(items):
    formatted_items = []
    
    for item in items:
        formatted_item = {
            'title': item.get('title', 'Unknown'),
            'description': item.get('description', ''),
            'subject': ', '.join(item.get('subjects', [])) if item.get('subjects') else '',
            'race': item.get('race', 'Unknown'),
            'sex': item.get('sex', 'Unknown'),
            'status': item.get('status', ''),
            'reward_text': item.get('reward_text', ''),
            'warning_message': item.get('warning_message', '')
        }
        formatted_items.append(formatted_item)
    
    return formatted_items

def send_to_trmnl(data):
    try:
        webhook_body = {
            "merge_variables": {
                "updated_at": datetime.now().strftime("%Y-%m-%d %H:%M:%S"),
                "total_wanted": data.get('total', 0),
                "wanted_list": format_fbi_data(data.get('items', [])),
                "page": data.get('page', 1)
            }
        }
        
        response = requests.post(
            TRMNL_WEBHOOK_URL,
            json=webhook_body
        )
        response.raise_for_status()
        print(f"Successfully sent data to TRMNL at {datetime.now()}")
        
    except Exception as e:
        print(f"Error sending to TRMNL: {e}")

def main():
    data = get_fbi_data()
    if data:
        send_to_trmnl(data)

if __name__ == "__main__":
    main()

================
File: markup.html
================
<div class="layout">
  <div class="columns">
    <div class="column">
      <span class="value value--large">FBI Most Wanted</span>
      <span class="value value--small">Total: {{ total_wanted }}</span>

      <div
        class="list"
        data-list-limit="true"
        data-list-max-height="340"
        data-list-hidden-count="true"
      >
        {% for person in wanted_list %}
        <div class="item">
          <div class="meta">
            <span class="index">{{ forloop.index }}</span>
          </div>
          <div class="content">
            <span class="title title--small">{{ person.title }}</span>
            <span class="description clamp--2">{{ person.description }}</span>
            <div class="flex gap--small">
              <span class="label label--small">{{ person.subject }}</span>
              <span class="label label--small"
                >{{ person.race }} {{ person.sex }}</span
              >
              {% if person.warning_message != "" %}
              <span class="label label--small label--warning"
                >‚ö†Ô∏è {{ person.warning_message }}</span
              >
              {% endif %}
            </div>
            {% if person.reward_text != "" %}
            <span class="label label--small label--inverted"
              >üí∞ {{ person.reward_text }}</span
            >
            {% endif %}
          </div>
        </div>
        {% endfor %}
      </div>
    </div>
  </div>
</div>

<div class="title_bar">
  <img
    class="image"
    src="https://usetrmnl.com/images/plugins/trmnl--render.svg"
  />
  <span class="title">FBI Wanted List</span>
  <span class="instance">Last Updated: {{ updated_at }}</span>
</div>

================
File: README.md
================
# FBI Wanted TRMNL Plugin

A TRMNL plugin that displays FBI's Most Wanted list using the official FBI Wanted API.

## Features

- Displays current FBI Most Wanted list
- Shows detailed information for each wanted person
- Auto-updates every 6 hours via GitHub Actions
- Includes warning messages and reward information when available
- Clean, organized display using TRMNL's design system

## Setup

1. Create a new Private Plugin in TRMNL:
   - Go to Plugins -> Private Plugin -> Add New
   - Name it "FBI Most Wanted"
   - Select "Webhook" for the Strategy
   - Save and copy the Plugin UUID

2. Configure the plugin:
   - Copy `.env.example` to `.env`
   - Add your TRMNL Plugin UUID to `.env`
   - Copy the markup from `markup.html` into TRMNL's plugin markup editor

3. Set up GitHub Actions:
   - Add your TRMNL Plugin UUID as a GitHub secret named `TRMNL_PLUGIN_UUID`
   - The workflow will automatically run every 6 hours

## Local Development

1. Install dependencies:
```bash
pip install -r requirements.txt
```

2. Create `.env` file with your configuration:
```bash
cp .env.example .env
```

3. Edit `.env` with your TRMNL Plugin UUID

4. Run the script:
```bash
python main.py
```

## GitHub Actions Configuration

The plugin automatically updates every 6 hours using GitHub Actions. You can also trigger updates manually from the Actions tab in your repository.

## License

MIT License

## Acknowledgments

- FBI Wanted API: https://api.fbi.gov/wanted/v1/list
- TRMNL Framework: https://usetrmnl.com/

================
File: requirements.txt
================
requests==2.31.0
python-dotenv==1.0.0
